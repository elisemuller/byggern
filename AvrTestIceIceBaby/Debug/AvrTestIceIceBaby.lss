
AvrTestIceIceBaby.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800100  00000bd6  00000c6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bd6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080016c  0080016c  00000cd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000d70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015df  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c49  00000000  00000000  000024cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000be4  00000000  00000000  00003118  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  00003cfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006a5  00000000  00000000  00004060  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008c0  00000000  00000000  00004705  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00004fc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 ed       	ldi	r30, 0xD6	; 214
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 36       	cpi	r26, 0x6C	; 108
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e6       	ldi	r26, 0x6C	; 108
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 37       	cpi	r26, 0x78	; 120
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 ad 00 	call	0x15a	; 0x15a <main>
  a6:	0c 94 e9 05 	jmp	0xbd2	; 0xbd2 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:



void adc_init(void){
	// Configure PD5 pin as output
	DDRD |= (1 << DDD5);
  ae:	8d 9a       	sbi	0x11, 5	; 17

	// Timer without prescaling
	TCCR1B &= ~(7 << CS10); // Set CS10, CS11, CS12 to 0
  b0:	8e b5       	in	r24, 0x2e	; 46
  b2:	88 7f       	andi	r24, 0xF8	; 248
  b4:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << CS10); // Set CS10 to 1
  b6:	8e b5       	in	r24, 0x2e	; 46
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	8e bd       	out	0x2e, r24	; 46

	// Waveform generation mode = CTC, Top = OCR0
	TCCR1A &= ~(1 << WGM10); // WGM10 = 0
  bc:	8f b5       	in	r24, 0x2f	; 47
  be:	8e 7f       	andi	r24, 0xFE	; 254
  c0:	8f bd       	out	0x2f, r24	; 47
	TCCR1A &= ~(1 << WGM11); // WGM11 = 0
  c2:	8f b5       	in	r24, 0x2f	; 47
  c4:	8d 7f       	andi	r24, 0xFD	; 253
  c6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12); // WGM12 = 1
  c8:	8e b5       	in	r24, 0x2e	; 46
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1 << WGM13); // WGM13 = 0
  ce:	8e b5       	in	r24, 0x2e	; 46
  d0:	8f 7e       	andi	r24, 0xEF	; 239
  d2:	8e bd       	out	0x2e, r24	; 46
	
	// Toggles pin PD5 when TCNT0 = OCR0
	TCCR1A &= ~(1 << COM1A1); // COM1A1 = 0
  d4:	8f b5       	in	r24, 0x2f	; 47
  d6:	8f 77       	andi	r24, 0x7F	; 127
  d8:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1 << COM1A0); // COM1A0 = 1
  da:	8f b5       	in	r24, 0x2f	; 47
  dc:	80 64       	ori	r24, 0x40	; 64
  de:	8f bd       	out	0x2f, r24	; 47
	
	// Defines the top value for the counter
	OCR1A = 1;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	9b bd       	out	0x2b, r25	; 43
  e6:	8a bd       	out	0x2a, r24	; 42
  e8:	08 95       	ret

000000ea <__vector_1>:
	
	// Enable global interrupts
	sei();
}

ISR(INT0_vect){
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	2f 93       	push	r18
  f6:	3f 93       	push	r19
  f8:	4f 93       	push	r20
  fa:	5f 93       	push	r21
  fc:	6f 93       	push	r22
  fe:	7f 93       	push	r23
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	cf 93       	push	r28
 10a:	ef 93       	push	r30
 10c:	ff 93       	push	r31
	uint8_t interrupt_flag = mcp2515_read(MCP_CANINTF);
 10e:	8c e2       	ldi	r24, 0x2C	; 44
 110:	0e 94 c3 00 	call	0x186	; 0x186 <mcp2515_read>
	if (interrupt_flag && 0x01){
 114:	88 23       	and	r24, r24
 116:	79 f0       	breq	.+30     	; 0x136 <__vector_1+0x4c>
		READ_B0_MESSAGE = 1;
 118:	c1 e0       	ldi	r28, 0x01	; 1
 11a:	c0 93 6d 01 	sts	0x016D, r28	; 0x80016d <READ_B0_MESSAGE>
		mcp2515_bit_modify(0x01, 0x00, MCP_CANINTF);
 11e:	4c e2       	ldi	r20, 0x2C	; 44
 120:	60 e0       	ldi	r22, 0x00	; 0
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	0e 94 d5 00 	call	0x1aa	; 0x1aa <mcp2515_bit_modify>
	}
	if (interrupt_flag && 0x02){
		READ_B1_MESSAGE = 1;
 128:	c0 93 6c 01 	sts	0x016C, r28	; 0x80016c <__data_end>
		mcp2515_bit_modify(0x02, 0x00, MCP_CANINTF);
 12c:	4c e2       	ldi	r20, 0x2C	; 44
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	0e 94 d5 00 	call	0x1aa	; 0x1aa <mcp2515_bit_modify>
	}
 136:	ff 91       	pop	r31
 138:	ef 91       	pop	r30
 13a:	cf 91       	pop	r28
 13c:	bf 91       	pop	r27
 13e:	af 91       	pop	r26
 140:	9f 91       	pop	r25
 142:	8f 91       	pop	r24
 144:	7f 91       	pop	r23
 146:	6f 91       	pop	r22
 148:	5f 91       	pop	r21
 14a:	4f 91       	pop	r20
 14c:	3f 91       	pop	r19
 14e:	2f 91       	pop	r18
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <main>:
#include "CAN_driver.h"


int main(void)
{
	uart_init( MYUBRR );
 15a:	8f e1       	ldi	r24, 0x1F	; 31
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 3f 01 	call	0x27e	; 0x27e <uart_init>
	xmem_init();
 162:	0e 94 2c 01 	call	0x258	; 0x258 <xmem_init>
	adc_init();
 166:	0e 94 57 00 	call	0xae	; 0xae <adc_init>

	//SPI_init();
	//SPI_send("H");
	//CAN_init();
	//menu_print();
	mcp2515_init();
 16a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <mcp2515_init>
	//
	//can_message test_received;
	
	
	while(1){
		mcp2515_init();
 16e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <mcp2515_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	9c e2       	ldi	r25, 0x2C	; 44
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x1e>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x28>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x2a>
 184:	f4 cf       	rjmp	.-24     	; 0x16e <main+0x14>

00000186 <mcp2515_read>:
	}
	if(buff_tx2){
		SPI_send(MCP_RTS_TX2);
	}
	SPI_deselect();
}
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
 18a:	0e 94 28 01 	call	0x250	; 0x250 <SPI_select>
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
 194:	8c 2f       	mov	r24, r28
 196:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
 19a:	0e 94 22 01 	call	0x244	; 0x244 <SPI_read>
 19e:	c8 2f       	mov	r28, r24
 1a0:	0e 94 2a 01 	call	0x254	; 0x254 <SPI_deselect>
 1a4:	8c 2f       	mov	r24, r28
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t mask_byte, uint8_t data_byte, uint8_t address){
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	d8 2f       	mov	r29, r24
 1b2:	c6 2f       	mov	r28, r22
 1b4:	14 2f       	mov	r17, r20
	SPI_select();
 1b6:	0e 94 28 01 	call	0x250	; 0x250 <SPI_select>
	SPI_send(MCP_BITMOD);
 1ba:	85 e0       	ldi	r24, 0x05	; 5
 1bc:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
	SPI_send(address);
 1c0:	81 2f       	mov	r24, r17
 1c2:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
	SPI_send(mask_byte);
 1c6:	8d 2f       	mov	r24, r29
 1c8:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
	SPI_send(data_byte);
 1cc:	8c 2f       	mov	r24, r28
 1ce:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
	SPI_deselect();
 1d2:	0e 94 2a 01 	call	0x254	; 0x254 <SPI_deselect>
}
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	1f 91       	pop	r17
 1dc:	08 95       	ret

000001de <mcp2515_reset>:

void mcp2515_reset(void){
	SPI_select();
 1de:	0e 94 28 01 	call	0x250	; 0x250 <SPI_select>
	SPI_send(MCP_RESET);
 1e2:	80 ec       	ldi	r24, 0xC0	; 192
 1e4:	0e 94 1e 01 	call	0x23c	; 0x23c <SPI_send>
	SPI_deselect();
 1e8:	0e 94 2a 01 	call	0x254	; 0x254 <SPI_deselect>
 1ec:	08 95       	ret

000001ee <mcp2515_init>:


uint8_t mcp2515_init(void){
  uint8_t value; 
  
  SPI_init();
 1ee:	0e 94 16 01 	call	0x22c	; 0x22c <SPI_init>

  mcp2515_reset();
 1f2:	0e 94 ef 00 	call	0x1de	; 0x1de <mcp2515_reset>
 

  
  //Self-test (Should be implemented in all drivers)
 value = mcp2515_read(MCP_CANSTAT);
 1f6:	8e e0       	ldi	r24, 0x0E	; 14
 1f8:	0e 94 c3 00 	call	0x186	; 0x186 <mcp2515_read>
  if ((value & MODE_MASK) != MODE_CONFIG){
 1fc:	98 2f       	mov	r25, r24
 1fe:	90 7e       	andi	r25, 0xE0	; 224
 200:	90 38       	cpi	r25, 0x80	; 128
 202:	71 f0       	breq	.+28     	; 0x220 <mcp2515_init+0x32>
    printf("MCP2515 is NOT in configuration mode after reset: %x\r\n", value);
 204:	1f 92       	push	r1
 206:	8f 93       	push	r24
 208:	86 e0       	ldi	r24, 0x06	; 6
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	0e 94 b8 02 	call	0x570	; 0x570 <printf>
    return 1;        
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	08 95       	ret
  }
  printf("MCP2515 is in configuration mode after reset!\r\n");
 220:	8d e3       	ldi	r24, 0x3D	; 61
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	0e 94 ce 02 	call	0x59c	; 0x59c <puts>
  //More initialization
  
  return 0; 
 228:	80 e0       	ldi	r24, 0x00	; 0
}
 22a:	08 95       	ret

0000022c <SPI_init>:
#define CAN_CS PB4
#define SPI_PORT PORTB

void SPI_init(void){
  // Set MOSI, SS and SCK output, all others input
  DDRB |= (1 << PB5) | (1 << CAN_CS) | (1 << PB7);
 22c:	87 b3       	in	r24, 0x17	; 23
 22e:	80 6b       	ori	r24, 0xB0	; 176
 230:	87 bb       	out	0x17, r24	; 23
  DDRB &= ~(1 << PB6); // PB6 = 0, MISO is input
 232:	be 98       	cbi	0x17, 6	; 23
  // Enable SPI, Master, set clock rate fck/16
  SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
 234:	8d b1       	in	r24, 0x0d	; 13
 236:	81 65       	ori	r24, 0x51	; 81
 238:	8d b9       	out	0x0d, r24	; 13
 23a:	08 95       	ret

0000023c <SPI_send>:
}


void SPI_send(char cData){
  //Start transmission
  SPDR = cData; //SPI Data register
 23c:	8f b9       	out	0x0f, r24	; 15
  //Wait for transmission complete
  while(!(SPSR & (1 << SPIF))){
 23e:	77 9b       	sbis	0x0e, 7	; 14
 240:	fe cf       	rjmp	.-4      	; 0x23e <SPI_send+0x2>
	  ;} //SPIF sets interrupt flag IF when transmission is completed
}
 242:	08 95       	ret

00000244 <SPI_read>:

char SPI_read(void){
  //Send dummy byte
	SPDR = 0xFF; //SPI Data register
 244:	8f ef       	ldi	r24, 0xFF	; 255
 246:	8f b9       	out	0x0f, r24	; 15
  
  //Wait for transmission complete
	while(!(SPSR & (1 << SPIF))){
 248:	77 9b       	sbis	0x0e, 7	; 14
 24a:	fe cf       	rjmp	.-4      	; 0x248 <SPI_read+0x4>
		;}//SPIF sets interrupt flag IF when transmission is completed
	return SPDR;
 24c:	8f b1       	in	r24, 0x0f	; 15
}
 24e:	08 95       	ret

00000250 <SPI_select>:

void SPI_select(void){
  SPI_PORT &= ~(1 << CAN_CS);
 250:	c4 98       	cbi	0x18, 4	; 24
 252:	08 95       	ret

00000254 <SPI_deselect>:
}
 
        
void SPI_deselect(void){
  SPI_PORT |= (1 << CAN_CS);
 254:	c4 9a       	sbi	0x18, 4	; 24
 256:	08 95       	ret

00000258 <xmem_init>:
#define BASE_ADDRESS 0x1000


void xmem_init(void) {
	// Enables external memory
	MCUCR |= (1 << SRE); 
 258:	85 b7       	in	r24, 0x35	; 53
 25a:	80 68       	ori	r24, 0x80	; 128
 25c:	85 bf       	out	0x35, r24	; 53
	
	// Masks PC4-PC7 pins
	SFIOR &= ~(7 << XMM0);
 25e:	80 b7       	in	r24, 0x30	; 48
 260:	87 7c       	andi	r24, 0xC7	; 199
 262:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2); 
 264:	80 b7       	in	r24, 0x30	; 48
 266:	80 62       	ori	r24, 0x20	; 32
 268:	80 bf       	out	0x30, r24	; 48
 26a:	08 95       	ret

0000026c <uart_transmit>:
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
	fdevopen(uart_transmit,uart_receive);
}

void uart_transmit(unsigned char message){
	while ( !(UCSR0A & (1 << UDRE0)) ); // Wait until last message has been sent and transmit buffer is empty.
 26c:	5d 9b       	sbis	0x0b, 5	; 11
 26e:	fe cf       	rjmp	.-4      	; 0x26c <uart_transmit>
	UDR0 = message;						// Put data in buffer
 270:	8c b9       	out	0x0c, r24	; 12
 272:	08 95       	ret

00000274 <uart_receive>:
}

unsigned char uart_receive(void){
	while ( !(UCSR0A & (1 << RXC0)) );	// Wait until last message has been received
 274:	5f 9b       	sbis	0x0b, 7	; 11
 276:	fe cf       	rjmp	.-4      	; 0x274 <uart_receive>
	
	UCSR0A |= (1 << RXC0);
 278:	5f 9a       	sbi	0x0b, 7	; 11
	return UDR0;					// Put data in buffer
 27a:	8c b1       	in	r24, 0x0c	; 12
}
 27c:	08 95       	ret

0000027e <uart_init>:

// Here, using USART0-registers

void uart_init(unsigned int ubrr){
	// Baud rate
	UBRR0H = (unsigned char) (ubrr >> 8);	// Baud rate high register
 27e:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);		// Baud rate low register
 280:	89 b9       	out	0x09, r24	; 9
	// Enable receivers and transmitter on usart 0
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 282:	88 e1       	ldi	r24, 0x18	; 24
 284:	8a b9       	out	0x0a, r24	; 10
	// Data format (char = 8 bit, + 2 stop bit)
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
 286:	8e e8       	ldi	r24, 0x8E	; 142
 288:	80 bd       	out	0x20, r24	; 32
	fdevopen(uart_transmit,uart_receive);
 28a:	6a e3       	ldi	r22, 0x3A	; 58
 28c:	71 e0       	ldi	r23, 0x01	; 1
 28e:	86 e3       	ldi	r24, 0x36	; 54
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	0e 94 6d 02 	call	0x4da	; 0x4da <fdevopen>
 296:	08 95       	ret

00000298 <malloc>:
 298:	0f 93       	push	r16
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	82 30       	cpi	r24, 0x02	; 2
 2a2:	91 05       	cpc	r25, r1
 2a4:	10 f4       	brcc	.+4      	; 0x2aa <malloc+0x12>
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <__flp>
 2ae:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <__flp+0x1>
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	a0 e0       	ldi	r26, 0x00	; 0
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	30 97       	sbiw	r30, 0x00	; 0
 2bc:	19 f1       	breq	.+70     	; 0x304 <malloc+0x6c>
 2be:	40 81       	ld	r20, Z
 2c0:	51 81       	ldd	r21, Z+1	; 0x01
 2c2:	02 81       	ldd	r16, Z+2	; 0x02
 2c4:	13 81       	ldd	r17, Z+3	; 0x03
 2c6:	48 17       	cp	r20, r24
 2c8:	59 07       	cpc	r21, r25
 2ca:	c8 f0       	brcs	.+50     	; 0x2fe <malloc+0x66>
 2cc:	84 17       	cp	r24, r20
 2ce:	95 07       	cpc	r25, r21
 2d0:	69 f4       	brne	.+26     	; 0x2ec <malloc+0x54>
 2d2:	10 97       	sbiw	r26, 0x00	; 0
 2d4:	31 f0       	breq	.+12     	; 0x2e2 <malloc+0x4a>
 2d6:	12 96       	adiw	r26, 0x02	; 2
 2d8:	0c 93       	st	X, r16
 2da:	12 97       	sbiw	r26, 0x02	; 2
 2dc:	13 96       	adiw	r26, 0x03	; 3
 2de:	1c 93       	st	X, r17
 2e0:	27 c0       	rjmp	.+78     	; 0x330 <malloc+0x98>
 2e2:	00 93 70 01 	sts	0x0170, r16	; 0x800170 <__flp>
 2e6:	10 93 71 01 	sts	0x0171, r17	; 0x800171 <__flp+0x1>
 2ea:	22 c0       	rjmp	.+68     	; 0x330 <malloc+0x98>
 2ec:	21 15       	cp	r18, r1
 2ee:	31 05       	cpc	r19, r1
 2f0:	19 f0       	breq	.+6      	; 0x2f8 <malloc+0x60>
 2f2:	42 17       	cp	r20, r18
 2f4:	53 07       	cpc	r21, r19
 2f6:	18 f4       	brcc	.+6      	; 0x2fe <malloc+0x66>
 2f8:	9a 01       	movw	r18, r20
 2fa:	bd 01       	movw	r22, r26
 2fc:	ef 01       	movw	r28, r30
 2fe:	df 01       	movw	r26, r30
 300:	f8 01       	movw	r30, r16
 302:	db cf       	rjmp	.-74     	; 0x2ba <malloc+0x22>
 304:	21 15       	cp	r18, r1
 306:	31 05       	cpc	r19, r1
 308:	f9 f0       	breq	.+62     	; 0x348 <malloc+0xb0>
 30a:	28 1b       	sub	r18, r24
 30c:	39 0b       	sbc	r19, r25
 30e:	24 30       	cpi	r18, 0x04	; 4
 310:	31 05       	cpc	r19, r1
 312:	80 f4       	brcc	.+32     	; 0x334 <malloc+0x9c>
 314:	8a 81       	ldd	r24, Y+2	; 0x02
 316:	9b 81       	ldd	r25, Y+3	; 0x03
 318:	61 15       	cp	r22, r1
 31a:	71 05       	cpc	r23, r1
 31c:	21 f0       	breq	.+8      	; 0x326 <malloc+0x8e>
 31e:	fb 01       	movw	r30, r22
 320:	93 83       	std	Z+3, r25	; 0x03
 322:	82 83       	std	Z+2, r24	; 0x02
 324:	04 c0       	rjmp	.+8      	; 0x32e <malloc+0x96>
 326:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <__flp+0x1>
 32a:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <__flp>
 32e:	fe 01       	movw	r30, r28
 330:	32 96       	adiw	r30, 0x02	; 2
 332:	44 c0       	rjmp	.+136    	; 0x3bc <malloc+0x124>
 334:	fe 01       	movw	r30, r28
 336:	e2 0f       	add	r30, r18
 338:	f3 1f       	adc	r31, r19
 33a:	81 93       	st	Z+, r24
 33c:	91 93       	st	Z+, r25
 33e:	22 50       	subi	r18, 0x02	; 2
 340:	31 09       	sbc	r19, r1
 342:	39 83       	std	Y+1, r19	; 0x01
 344:	28 83       	st	Y, r18
 346:	3a c0       	rjmp	.+116    	; 0x3bc <malloc+0x124>
 348:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__brkval>
 34c:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__brkval+0x1>
 350:	23 2b       	or	r18, r19
 352:	41 f4       	brne	.+16     	; 0x364 <malloc+0xcc>
 354:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 358:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 35c:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__brkval+0x1>
 360:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__brkval>
 364:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 368:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 36c:	21 15       	cp	r18, r1
 36e:	31 05       	cpc	r19, r1
 370:	41 f4       	brne	.+16     	; 0x382 <malloc+0xea>
 372:	2d b7       	in	r18, 0x3d	; 61
 374:	3e b7       	in	r19, 0x3e	; 62
 376:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 37a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 37e:	24 1b       	sub	r18, r20
 380:	35 0b       	sbc	r19, r21
 382:	e0 91 6e 01 	lds	r30, 0x016E	; 0x80016e <__brkval>
 386:	f0 91 6f 01 	lds	r31, 0x016F	; 0x80016f <__brkval+0x1>
 38a:	e2 17       	cp	r30, r18
 38c:	f3 07       	cpc	r31, r19
 38e:	a0 f4       	brcc	.+40     	; 0x3b8 <malloc+0x120>
 390:	2e 1b       	sub	r18, r30
 392:	3f 0b       	sbc	r19, r31
 394:	28 17       	cp	r18, r24
 396:	39 07       	cpc	r19, r25
 398:	78 f0       	brcs	.+30     	; 0x3b8 <malloc+0x120>
 39a:	ac 01       	movw	r20, r24
 39c:	4e 5f       	subi	r20, 0xFE	; 254
 39e:	5f 4f       	sbci	r21, 0xFF	; 255
 3a0:	24 17       	cp	r18, r20
 3a2:	35 07       	cpc	r19, r21
 3a4:	48 f0       	brcs	.+18     	; 0x3b8 <malloc+0x120>
 3a6:	4e 0f       	add	r20, r30
 3a8:	5f 1f       	adc	r21, r31
 3aa:	50 93 6f 01 	sts	0x016F, r21	; 0x80016f <__brkval+0x1>
 3ae:	40 93 6e 01 	sts	0x016E, r20	; 0x80016e <__brkval>
 3b2:	81 93       	st	Z+, r24
 3b4:	91 93       	st	Z+, r25
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <malloc+0x124>
 3b8:	e0 e0       	ldi	r30, 0x00	; 0
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	cf 01       	movw	r24, r30
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	1f 91       	pop	r17
 3c4:	0f 91       	pop	r16
 3c6:	08 95       	ret

000003c8 <free>:
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	00 97       	sbiw	r24, 0x00	; 0
 3ce:	09 f4       	brne	.+2      	; 0x3d2 <free+0xa>
 3d0:	81 c0       	rjmp	.+258    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 3d2:	fc 01       	movw	r30, r24
 3d4:	32 97       	sbiw	r30, 0x02	; 2
 3d6:	13 82       	std	Z+3, r1	; 0x03
 3d8:	12 82       	std	Z+2, r1	; 0x02
 3da:	a0 91 70 01 	lds	r26, 0x0170	; 0x800170 <__flp>
 3de:	b0 91 71 01 	lds	r27, 0x0171	; 0x800171 <__flp+0x1>
 3e2:	10 97       	sbiw	r26, 0x00	; 0
 3e4:	81 f4       	brne	.+32     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e6:	20 81       	ld	r18, Z
 3e8:	31 81       	ldd	r19, Z+1	; 0x01
 3ea:	82 0f       	add	r24, r18
 3ec:	93 1f       	adc	r25, r19
 3ee:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__brkval>
 3f2:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__brkval+0x1>
 3f6:	28 17       	cp	r18, r24
 3f8:	39 07       	cpc	r19, r25
 3fa:	51 f5       	brne	.+84     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 3fc:	f0 93 6f 01 	sts	0x016F, r31	; 0x80016f <__brkval+0x1>
 400:	e0 93 6e 01 	sts	0x016E, r30	; 0x80016e <__brkval>
 404:	67 c0       	rjmp	.+206    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 406:	ed 01       	movw	r28, r26
 408:	20 e0       	ldi	r18, 0x00	; 0
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	ce 17       	cp	r28, r30
 40e:	df 07       	cpc	r29, r31
 410:	40 f4       	brcc	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 412:	4a 81       	ldd	r20, Y+2	; 0x02
 414:	5b 81       	ldd	r21, Y+3	; 0x03
 416:	9e 01       	movw	r18, r28
 418:	41 15       	cp	r20, r1
 41a:	51 05       	cpc	r21, r1
 41c:	f1 f0       	breq	.+60     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 41e:	ea 01       	movw	r28, r20
 420:	f5 cf       	rjmp	.-22     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 422:	d3 83       	std	Z+3, r29	; 0x03
 424:	c2 83       	std	Z+2, r28	; 0x02
 426:	40 81       	ld	r20, Z
 428:	51 81       	ldd	r21, Z+1	; 0x01
 42a:	84 0f       	add	r24, r20
 42c:	95 1f       	adc	r25, r21
 42e:	c8 17       	cp	r28, r24
 430:	d9 07       	cpc	r29, r25
 432:	59 f4       	brne	.+22     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 434:	88 81       	ld	r24, Y
 436:	99 81       	ldd	r25, Y+1	; 0x01
 438:	84 0f       	add	r24, r20
 43a:	95 1f       	adc	r25, r21
 43c:	02 96       	adiw	r24, 0x02	; 2
 43e:	91 83       	std	Z+1, r25	; 0x01
 440:	80 83       	st	Z, r24
 442:	8a 81       	ldd	r24, Y+2	; 0x02
 444:	9b 81       	ldd	r25, Y+3	; 0x03
 446:	93 83       	std	Z+3, r25	; 0x03
 448:	82 83       	std	Z+2, r24	; 0x02
 44a:	21 15       	cp	r18, r1
 44c:	31 05       	cpc	r19, r1
 44e:	29 f4       	brne	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	f0 93 71 01 	sts	0x0171, r31	; 0x800171 <__flp+0x1>
 454:	e0 93 70 01 	sts	0x0170, r30	; 0x800170 <__flp>
 458:	3d c0       	rjmp	.+122    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 45a:	e9 01       	movw	r28, r18
 45c:	fb 83       	std	Y+3, r31	; 0x03
 45e:	ea 83       	std	Y+2, r30	; 0x02
 460:	49 91       	ld	r20, Y+
 462:	59 91       	ld	r21, Y+
 464:	c4 0f       	add	r28, r20
 466:	d5 1f       	adc	r29, r21
 468:	ec 17       	cp	r30, r28
 46a:	fd 07       	cpc	r31, r29
 46c:	61 f4       	brne	.+24     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 46e:	80 81       	ld	r24, Z
 470:	91 81       	ldd	r25, Z+1	; 0x01
 472:	84 0f       	add	r24, r20
 474:	95 1f       	adc	r25, r21
 476:	02 96       	adiw	r24, 0x02	; 2
 478:	e9 01       	movw	r28, r18
 47a:	99 83       	std	Y+1, r25	; 0x01
 47c:	88 83       	st	Y, r24
 47e:	82 81       	ldd	r24, Z+2	; 0x02
 480:	93 81       	ldd	r25, Z+3	; 0x03
 482:	9b 83       	std	Y+3, r25	; 0x03
 484:	8a 83       	std	Y+2, r24	; 0x02
 486:	e0 e0       	ldi	r30, 0x00	; 0
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	12 96       	adiw	r26, 0x02	; 2
 48c:	8d 91       	ld	r24, X+
 48e:	9c 91       	ld	r25, X
 490:	13 97       	sbiw	r26, 0x03	; 3
 492:	00 97       	sbiw	r24, 0x00	; 0
 494:	19 f0       	breq	.+6      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 496:	fd 01       	movw	r30, r26
 498:	dc 01       	movw	r26, r24
 49a:	f7 cf       	rjmp	.-18     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 49c:	8d 91       	ld	r24, X+
 49e:	9c 91       	ld	r25, X
 4a0:	11 97       	sbiw	r26, 0x01	; 1
 4a2:	9d 01       	movw	r18, r26
 4a4:	2e 5f       	subi	r18, 0xFE	; 254
 4a6:	3f 4f       	sbci	r19, 0xFF	; 255
 4a8:	82 0f       	add	r24, r18
 4aa:	93 1f       	adc	r25, r19
 4ac:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__brkval>
 4b0:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__brkval+0x1>
 4b4:	28 17       	cp	r18, r24
 4b6:	39 07       	cpc	r19, r25
 4b8:	69 f4       	brne	.+26     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ba:	30 97       	sbiw	r30, 0x00	; 0
 4bc:	29 f4       	brne	.+10     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4be:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <__flp+0x1>
 4c2:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <__flp>
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c8:	13 82       	std	Z+3, r1	; 0x03
 4ca:	12 82       	std	Z+2, r1	; 0x02
 4cc:	b0 93 6f 01 	sts	0x016F, r27	; 0x80016f <__brkval+0x1>
 4d0:	a0 93 6e 01 	sts	0x016E, r26	; 0x80016e <__brkval>
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <fdevopen>:
 4da:	0f 93       	push	r16
 4dc:	1f 93       	push	r17
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
 4e2:	00 97       	sbiw	r24, 0x00	; 0
 4e4:	31 f4       	brne	.+12     	; 0x4f2 <fdevopen+0x18>
 4e6:	61 15       	cp	r22, r1
 4e8:	71 05       	cpc	r23, r1
 4ea:	19 f4       	brne	.+6      	; 0x4f2 <fdevopen+0x18>
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	3a c0       	rjmp	.+116    	; 0x566 <__stack+0x67>
 4f2:	8b 01       	movw	r16, r22
 4f4:	ec 01       	movw	r28, r24
 4f6:	6e e0       	ldi	r22, 0x0E	; 14
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 df 04 	call	0x9be	; 0x9be <calloc>
 502:	fc 01       	movw	r30, r24
 504:	89 2b       	or	r24, r25
 506:	91 f3       	breq	.-28     	; 0x4ec <fdevopen+0x12>
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	83 83       	std	Z+3, r24	; 0x03
 50c:	01 15       	cp	r16, r1
 50e:	11 05       	cpc	r17, r1
 510:	71 f0       	breq	.+28     	; 0x52e <__stack+0x2f>
 512:	13 87       	std	Z+11, r17	; 0x0b
 514:	02 87       	std	Z+10, r16	; 0x0a
 516:	81 e8       	ldi	r24, 0x81	; 129
 518:	83 83       	std	Z+3, r24	; 0x03
 51a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <__iob>
 51e:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <__iob+0x1>
 522:	89 2b       	or	r24, r25
 524:	21 f4       	brne	.+8      	; 0x52e <__stack+0x2f>
 526:	f0 93 73 01 	sts	0x0173, r31	; 0x800173 <__iob+0x1>
 52a:	e0 93 72 01 	sts	0x0172, r30	; 0x800172 <__iob>
 52e:	20 97       	sbiw	r28, 0x00	; 0
 530:	c9 f0       	breq	.+50     	; 0x564 <__stack+0x65>
 532:	d1 87       	std	Z+9, r29	; 0x09
 534:	c0 87       	std	Z+8, r28	; 0x08
 536:	83 81       	ldd	r24, Z+3	; 0x03
 538:	82 60       	ori	r24, 0x02	; 2
 53a:	83 83       	std	Z+3, r24	; 0x03
 53c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <__iob+0x2>
 540:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <__iob+0x3>
 544:	89 2b       	or	r24, r25
 546:	71 f4       	brne	.+28     	; 0x564 <__stack+0x65>
 548:	f0 93 75 01 	sts	0x0175, r31	; 0x800175 <__iob+0x3>
 54c:	e0 93 74 01 	sts	0x0174, r30	; 0x800174 <__iob+0x2>
 550:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__iob+0x4>
 554:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <__iob+0x5>
 558:	89 2b       	or	r24, r25
 55a:	21 f4       	brne	.+8      	; 0x564 <__stack+0x65>
 55c:	f0 93 77 01 	sts	0x0177, r31	; 0x800177 <__iob+0x5>
 560:	e0 93 76 01 	sts	0x0176, r30	; 0x800176 <__iob+0x4>
 564:	cf 01       	movw	r24, r30
 566:	df 91       	pop	r29
 568:	cf 91       	pop	r28
 56a:	1f 91       	pop	r17
 56c:	0f 91       	pop	r16
 56e:	08 95       	ret

00000570 <printf>:
 570:	a0 e0       	ldi	r26, 0x00	; 0
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	ee eb       	ldi	r30, 0xBE	; 190
 576:	f2 e0       	ldi	r31, 0x02	; 2
 578:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__prologue_saves__+0x20>
 57c:	ae 01       	movw	r20, r28
 57e:	4b 5f       	subi	r20, 0xFB	; 251
 580:	5f 4f       	sbci	r21, 0xFF	; 255
 582:	fa 01       	movw	r30, r20
 584:	61 91       	ld	r22, Z+
 586:	71 91       	ld	r23, Z+
 588:	af 01       	movw	r20, r30
 58a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <__iob+0x2>
 58e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <__iob+0x3>
 592:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vfprintf>
 596:	e2 e0       	ldi	r30, 0x02	; 2
 598:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__epilogue_restores__+0x20>

0000059c <puts>:
 59c:	0f 93       	push	r16
 59e:	1f 93       	push	r17
 5a0:	cf 93       	push	r28
 5a2:	df 93       	push	r29
 5a4:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <__iob+0x2>
 5a8:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <__iob+0x3>
 5ac:	23 81       	ldd	r18, Z+3	; 0x03
 5ae:	21 ff       	sbrs	r18, 1
 5b0:	1b c0       	rjmp	.+54     	; 0x5e8 <puts+0x4c>
 5b2:	8c 01       	movw	r16, r24
 5b4:	d0 e0       	ldi	r29, 0x00	; 0
 5b6:	c0 e0       	ldi	r28, 0x00	; 0
 5b8:	f8 01       	movw	r30, r16
 5ba:	81 91       	ld	r24, Z+
 5bc:	8f 01       	movw	r16, r30
 5be:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <__iob+0x2>
 5c2:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <__iob+0x3>
 5c6:	db 01       	movw	r26, r22
 5c8:	18 96       	adiw	r26, 0x08	; 8
 5ca:	ed 91       	ld	r30, X+
 5cc:	fc 91       	ld	r31, X
 5ce:	19 97       	sbiw	r26, 0x09	; 9
 5d0:	88 23       	and	r24, r24
 5d2:	31 f0       	breq	.+12     	; 0x5e0 <puts+0x44>
 5d4:	09 95       	icall
 5d6:	89 2b       	or	r24, r25
 5d8:	79 f3       	breq	.-34     	; 0x5b8 <puts+0x1c>
 5da:	df ef       	ldi	r29, 0xFF	; 255
 5dc:	cf ef       	ldi	r28, 0xFF	; 255
 5de:	ec cf       	rjmp	.-40     	; 0x5b8 <puts+0x1c>
 5e0:	8a e0       	ldi	r24, 0x0A	; 10
 5e2:	09 95       	icall
 5e4:	89 2b       	or	r24, r25
 5e6:	19 f0       	breq	.+6      	; 0x5ee <puts+0x52>
 5e8:	8f ef       	ldi	r24, 0xFF	; 255
 5ea:	9f ef       	ldi	r25, 0xFF	; 255
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <puts+0x56>
 5ee:	8d 2f       	mov	r24, r29
 5f0:	9c 2f       	mov	r25, r28
 5f2:	df 91       	pop	r29
 5f4:	cf 91       	pop	r28
 5f6:	1f 91       	pop	r17
 5f8:	0f 91       	pop	r16
 5fa:	08 95       	ret

000005fc <vfprintf>:
 5fc:	ab e0       	ldi	r26, 0x0B	; 11
 5fe:	b0 e0       	ldi	r27, 0x00	; 0
 600:	e4 e0       	ldi	r30, 0x04	; 4
 602:	f3 e0       	ldi	r31, 0x03	; 3
 604:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__prologue_saves__>
 608:	6c 01       	movw	r12, r24
 60a:	7b 01       	movw	r14, r22
 60c:	8a 01       	movw	r16, r20
 60e:	fc 01       	movw	r30, r24
 610:	17 82       	std	Z+7, r1	; 0x07
 612:	16 82       	std	Z+6, r1	; 0x06
 614:	83 81       	ldd	r24, Z+3	; 0x03
 616:	81 ff       	sbrs	r24, 1
 618:	cc c1       	rjmp	.+920    	; 0x9b2 <vfprintf+0x3b6>
 61a:	ce 01       	movw	r24, r28
 61c:	01 96       	adiw	r24, 0x01	; 1
 61e:	3c 01       	movw	r6, r24
 620:	f6 01       	movw	r30, r12
 622:	93 81       	ldd	r25, Z+3	; 0x03
 624:	f7 01       	movw	r30, r14
 626:	93 fd       	sbrc	r25, 3
 628:	85 91       	lpm	r24, Z+
 62a:	93 ff       	sbrs	r25, 3
 62c:	81 91       	ld	r24, Z+
 62e:	7f 01       	movw	r14, r30
 630:	88 23       	and	r24, r24
 632:	09 f4       	brne	.+2      	; 0x636 <vfprintf+0x3a>
 634:	ba c1       	rjmp	.+884    	; 0x9aa <vfprintf+0x3ae>
 636:	85 32       	cpi	r24, 0x25	; 37
 638:	39 f4       	brne	.+14     	; 0x648 <vfprintf+0x4c>
 63a:	93 fd       	sbrc	r25, 3
 63c:	85 91       	lpm	r24, Z+
 63e:	93 ff       	sbrs	r25, 3
 640:	81 91       	ld	r24, Z+
 642:	7f 01       	movw	r14, r30
 644:	85 32       	cpi	r24, 0x25	; 37
 646:	29 f4       	brne	.+10     	; 0x652 <vfprintf+0x56>
 648:	b6 01       	movw	r22, r12
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 650:	e7 cf       	rjmp	.-50     	; 0x620 <vfprintf+0x24>
 652:	91 2c       	mov	r9, r1
 654:	21 2c       	mov	r2, r1
 656:	31 2c       	mov	r3, r1
 658:	ff e1       	ldi	r31, 0x1F	; 31
 65a:	f3 15       	cp	r31, r3
 65c:	d8 f0       	brcs	.+54     	; 0x694 <vfprintf+0x98>
 65e:	8b 32       	cpi	r24, 0x2B	; 43
 660:	79 f0       	breq	.+30     	; 0x680 <vfprintf+0x84>
 662:	38 f4       	brcc	.+14     	; 0x672 <vfprintf+0x76>
 664:	80 32       	cpi	r24, 0x20	; 32
 666:	79 f0       	breq	.+30     	; 0x686 <vfprintf+0x8a>
 668:	83 32       	cpi	r24, 0x23	; 35
 66a:	a1 f4       	brne	.+40     	; 0x694 <vfprintf+0x98>
 66c:	23 2d       	mov	r18, r3
 66e:	20 61       	ori	r18, 0x10	; 16
 670:	1d c0       	rjmp	.+58     	; 0x6ac <vfprintf+0xb0>
 672:	8d 32       	cpi	r24, 0x2D	; 45
 674:	61 f0       	breq	.+24     	; 0x68e <vfprintf+0x92>
 676:	80 33       	cpi	r24, 0x30	; 48
 678:	69 f4       	brne	.+26     	; 0x694 <vfprintf+0x98>
 67a:	23 2d       	mov	r18, r3
 67c:	21 60       	ori	r18, 0x01	; 1
 67e:	16 c0       	rjmp	.+44     	; 0x6ac <vfprintf+0xb0>
 680:	83 2d       	mov	r24, r3
 682:	82 60       	ori	r24, 0x02	; 2
 684:	38 2e       	mov	r3, r24
 686:	e3 2d       	mov	r30, r3
 688:	e4 60       	ori	r30, 0x04	; 4
 68a:	3e 2e       	mov	r3, r30
 68c:	2a c0       	rjmp	.+84     	; 0x6e2 <vfprintf+0xe6>
 68e:	f3 2d       	mov	r31, r3
 690:	f8 60       	ori	r31, 0x08	; 8
 692:	1d c0       	rjmp	.+58     	; 0x6ce <vfprintf+0xd2>
 694:	37 fc       	sbrc	r3, 7
 696:	2d c0       	rjmp	.+90     	; 0x6f2 <vfprintf+0xf6>
 698:	20 ed       	ldi	r18, 0xD0	; 208
 69a:	28 0f       	add	r18, r24
 69c:	2a 30       	cpi	r18, 0x0A	; 10
 69e:	40 f0       	brcs	.+16     	; 0x6b0 <vfprintf+0xb4>
 6a0:	8e 32       	cpi	r24, 0x2E	; 46
 6a2:	b9 f4       	brne	.+46     	; 0x6d2 <vfprintf+0xd6>
 6a4:	36 fc       	sbrc	r3, 6
 6a6:	81 c1       	rjmp	.+770    	; 0x9aa <vfprintf+0x3ae>
 6a8:	23 2d       	mov	r18, r3
 6aa:	20 64       	ori	r18, 0x40	; 64
 6ac:	32 2e       	mov	r3, r18
 6ae:	19 c0       	rjmp	.+50     	; 0x6e2 <vfprintf+0xe6>
 6b0:	36 fe       	sbrs	r3, 6
 6b2:	06 c0       	rjmp	.+12     	; 0x6c0 <vfprintf+0xc4>
 6b4:	8a e0       	ldi	r24, 0x0A	; 10
 6b6:	98 9e       	mul	r9, r24
 6b8:	20 0d       	add	r18, r0
 6ba:	11 24       	eor	r1, r1
 6bc:	92 2e       	mov	r9, r18
 6be:	11 c0       	rjmp	.+34     	; 0x6e2 <vfprintf+0xe6>
 6c0:	ea e0       	ldi	r30, 0x0A	; 10
 6c2:	2e 9e       	mul	r2, r30
 6c4:	20 0d       	add	r18, r0
 6c6:	11 24       	eor	r1, r1
 6c8:	22 2e       	mov	r2, r18
 6ca:	f3 2d       	mov	r31, r3
 6cc:	f0 62       	ori	r31, 0x20	; 32
 6ce:	3f 2e       	mov	r3, r31
 6d0:	08 c0       	rjmp	.+16     	; 0x6e2 <vfprintf+0xe6>
 6d2:	8c 36       	cpi	r24, 0x6C	; 108
 6d4:	21 f4       	brne	.+8      	; 0x6de <vfprintf+0xe2>
 6d6:	83 2d       	mov	r24, r3
 6d8:	80 68       	ori	r24, 0x80	; 128
 6da:	38 2e       	mov	r3, r24
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <vfprintf+0xe6>
 6de:	88 36       	cpi	r24, 0x68	; 104
 6e0:	41 f4       	brne	.+16     	; 0x6f2 <vfprintf+0xf6>
 6e2:	f7 01       	movw	r30, r14
 6e4:	93 fd       	sbrc	r25, 3
 6e6:	85 91       	lpm	r24, Z+
 6e8:	93 ff       	sbrs	r25, 3
 6ea:	81 91       	ld	r24, Z+
 6ec:	7f 01       	movw	r14, r30
 6ee:	81 11       	cpse	r24, r1
 6f0:	b3 cf       	rjmp	.-154    	; 0x658 <vfprintf+0x5c>
 6f2:	98 2f       	mov	r25, r24
 6f4:	9f 7d       	andi	r25, 0xDF	; 223
 6f6:	95 54       	subi	r25, 0x45	; 69
 6f8:	93 30       	cpi	r25, 0x03	; 3
 6fa:	28 f4       	brcc	.+10     	; 0x706 <vfprintf+0x10a>
 6fc:	0c 5f       	subi	r16, 0xFC	; 252
 6fe:	1f 4f       	sbci	r17, 0xFF	; 255
 700:	9f e3       	ldi	r25, 0x3F	; 63
 702:	99 83       	std	Y+1, r25	; 0x01
 704:	0d c0       	rjmp	.+26     	; 0x720 <vfprintf+0x124>
 706:	83 36       	cpi	r24, 0x63	; 99
 708:	31 f0       	breq	.+12     	; 0x716 <vfprintf+0x11a>
 70a:	83 37       	cpi	r24, 0x73	; 115
 70c:	71 f0       	breq	.+28     	; 0x72a <vfprintf+0x12e>
 70e:	83 35       	cpi	r24, 0x53	; 83
 710:	09 f0       	breq	.+2      	; 0x714 <vfprintf+0x118>
 712:	59 c0       	rjmp	.+178    	; 0x7c6 <vfprintf+0x1ca>
 714:	21 c0       	rjmp	.+66     	; 0x758 <vfprintf+0x15c>
 716:	f8 01       	movw	r30, r16
 718:	80 81       	ld	r24, Z
 71a:	89 83       	std	Y+1, r24	; 0x01
 71c:	0e 5f       	subi	r16, 0xFE	; 254
 71e:	1f 4f       	sbci	r17, 0xFF	; 255
 720:	88 24       	eor	r8, r8
 722:	83 94       	inc	r8
 724:	91 2c       	mov	r9, r1
 726:	53 01       	movw	r10, r6
 728:	13 c0       	rjmp	.+38     	; 0x750 <vfprintf+0x154>
 72a:	28 01       	movw	r4, r16
 72c:	f2 e0       	ldi	r31, 0x02	; 2
 72e:	4f 0e       	add	r4, r31
 730:	51 1c       	adc	r5, r1
 732:	f8 01       	movw	r30, r16
 734:	a0 80       	ld	r10, Z
 736:	b1 80       	ldd	r11, Z+1	; 0x01
 738:	36 fe       	sbrs	r3, 6
 73a:	03 c0       	rjmp	.+6      	; 0x742 <vfprintf+0x146>
 73c:	69 2d       	mov	r22, r9
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <vfprintf+0x14a>
 742:	6f ef       	ldi	r22, 0xFF	; 255
 744:	7f ef       	ldi	r23, 0xFF	; 255
 746:	c5 01       	movw	r24, r10
 748:	0e 94 0d 05 	call	0xa1a	; 0xa1a <strnlen>
 74c:	4c 01       	movw	r8, r24
 74e:	82 01       	movw	r16, r4
 750:	f3 2d       	mov	r31, r3
 752:	ff 77       	andi	r31, 0x7F	; 127
 754:	3f 2e       	mov	r3, r31
 756:	16 c0       	rjmp	.+44     	; 0x784 <vfprintf+0x188>
 758:	28 01       	movw	r4, r16
 75a:	22 e0       	ldi	r18, 0x02	; 2
 75c:	42 0e       	add	r4, r18
 75e:	51 1c       	adc	r5, r1
 760:	f8 01       	movw	r30, r16
 762:	a0 80       	ld	r10, Z
 764:	b1 80       	ldd	r11, Z+1	; 0x01
 766:	36 fe       	sbrs	r3, 6
 768:	03 c0       	rjmp	.+6      	; 0x770 <vfprintf+0x174>
 76a:	69 2d       	mov	r22, r9
 76c:	70 e0       	ldi	r23, 0x00	; 0
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x178>
 770:	6f ef       	ldi	r22, 0xFF	; 255
 772:	7f ef       	ldi	r23, 0xFF	; 255
 774:	c5 01       	movw	r24, r10
 776:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <strnlen_P>
 77a:	4c 01       	movw	r8, r24
 77c:	f3 2d       	mov	r31, r3
 77e:	f0 68       	ori	r31, 0x80	; 128
 780:	3f 2e       	mov	r3, r31
 782:	82 01       	movw	r16, r4
 784:	33 fc       	sbrc	r3, 3
 786:	1b c0       	rjmp	.+54     	; 0x7be <vfprintf+0x1c2>
 788:	82 2d       	mov	r24, r2
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	88 16       	cp	r8, r24
 78e:	99 06       	cpc	r9, r25
 790:	b0 f4       	brcc	.+44     	; 0x7be <vfprintf+0x1c2>
 792:	b6 01       	movw	r22, r12
 794:	80 e2       	ldi	r24, 0x20	; 32
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 79c:	2a 94       	dec	r2
 79e:	f4 cf       	rjmp	.-24     	; 0x788 <vfprintf+0x18c>
 7a0:	f5 01       	movw	r30, r10
 7a2:	37 fc       	sbrc	r3, 7
 7a4:	85 91       	lpm	r24, Z+
 7a6:	37 fe       	sbrs	r3, 7
 7a8:	81 91       	ld	r24, Z+
 7aa:	5f 01       	movw	r10, r30
 7ac:	b6 01       	movw	r22, r12
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 7b4:	21 10       	cpse	r2, r1
 7b6:	2a 94       	dec	r2
 7b8:	21 e0       	ldi	r18, 0x01	; 1
 7ba:	82 1a       	sub	r8, r18
 7bc:	91 08       	sbc	r9, r1
 7be:	81 14       	cp	r8, r1
 7c0:	91 04       	cpc	r9, r1
 7c2:	71 f7       	brne	.-36     	; 0x7a0 <vfprintf+0x1a4>
 7c4:	e8 c0       	rjmp	.+464    	; 0x996 <vfprintf+0x39a>
 7c6:	84 36       	cpi	r24, 0x64	; 100
 7c8:	11 f0       	breq	.+4      	; 0x7ce <vfprintf+0x1d2>
 7ca:	89 36       	cpi	r24, 0x69	; 105
 7cc:	41 f5       	brne	.+80     	; 0x81e <vfprintf+0x222>
 7ce:	f8 01       	movw	r30, r16
 7d0:	37 fe       	sbrs	r3, 7
 7d2:	07 c0       	rjmp	.+14     	; 0x7e2 <vfprintf+0x1e6>
 7d4:	60 81       	ld	r22, Z
 7d6:	71 81       	ldd	r23, Z+1	; 0x01
 7d8:	82 81       	ldd	r24, Z+2	; 0x02
 7da:	93 81       	ldd	r25, Z+3	; 0x03
 7dc:	0c 5f       	subi	r16, 0xFC	; 252
 7de:	1f 4f       	sbci	r17, 0xFF	; 255
 7e0:	08 c0       	rjmp	.+16     	; 0x7f2 <vfprintf+0x1f6>
 7e2:	60 81       	ld	r22, Z
 7e4:	71 81       	ldd	r23, Z+1	; 0x01
 7e6:	07 2e       	mov	r0, r23
 7e8:	00 0c       	add	r0, r0
 7ea:	88 0b       	sbc	r24, r24
 7ec:	99 0b       	sbc	r25, r25
 7ee:	0e 5f       	subi	r16, 0xFE	; 254
 7f0:	1f 4f       	sbci	r17, 0xFF	; 255
 7f2:	f3 2d       	mov	r31, r3
 7f4:	ff 76       	andi	r31, 0x6F	; 111
 7f6:	3f 2e       	mov	r3, r31
 7f8:	97 ff       	sbrs	r25, 7
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <vfprintf+0x212>
 7fc:	90 95       	com	r25
 7fe:	80 95       	com	r24
 800:	70 95       	com	r23
 802:	61 95       	neg	r22
 804:	7f 4f       	sbci	r23, 0xFF	; 255
 806:	8f 4f       	sbci	r24, 0xFF	; 255
 808:	9f 4f       	sbci	r25, 0xFF	; 255
 80a:	f0 68       	ori	r31, 0x80	; 128
 80c:	3f 2e       	mov	r3, r31
 80e:	2a e0       	ldi	r18, 0x0A	; 10
 810:	30 e0       	ldi	r19, 0x00	; 0
 812:	a3 01       	movw	r20, r6
 814:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__ultoa_invert>
 818:	88 2e       	mov	r8, r24
 81a:	86 18       	sub	r8, r6
 81c:	45 c0       	rjmp	.+138    	; 0x8a8 <vfprintf+0x2ac>
 81e:	85 37       	cpi	r24, 0x75	; 117
 820:	31 f4       	brne	.+12     	; 0x82e <vfprintf+0x232>
 822:	23 2d       	mov	r18, r3
 824:	2f 7e       	andi	r18, 0xEF	; 239
 826:	b2 2e       	mov	r11, r18
 828:	2a e0       	ldi	r18, 0x0A	; 10
 82a:	30 e0       	ldi	r19, 0x00	; 0
 82c:	25 c0       	rjmp	.+74     	; 0x878 <vfprintf+0x27c>
 82e:	93 2d       	mov	r25, r3
 830:	99 7f       	andi	r25, 0xF9	; 249
 832:	b9 2e       	mov	r11, r25
 834:	8f 36       	cpi	r24, 0x6F	; 111
 836:	c1 f0       	breq	.+48     	; 0x868 <vfprintf+0x26c>
 838:	18 f4       	brcc	.+6      	; 0x840 <vfprintf+0x244>
 83a:	88 35       	cpi	r24, 0x58	; 88
 83c:	79 f0       	breq	.+30     	; 0x85c <vfprintf+0x260>
 83e:	b5 c0       	rjmp	.+362    	; 0x9aa <vfprintf+0x3ae>
 840:	80 37       	cpi	r24, 0x70	; 112
 842:	19 f0       	breq	.+6      	; 0x84a <vfprintf+0x24e>
 844:	88 37       	cpi	r24, 0x78	; 120
 846:	21 f0       	breq	.+8      	; 0x850 <vfprintf+0x254>
 848:	b0 c0       	rjmp	.+352    	; 0x9aa <vfprintf+0x3ae>
 84a:	e9 2f       	mov	r30, r25
 84c:	e0 61       	ori	r30, 0x10	; 16
 84e:	be 2e       	mov	r11, r30
 850:	b4 fe       	sbrs	r11, 4
 852:	0d c0       	rjmp	.+26     	; 0x86e <vfprintf+0x272>
 854:	fb 2d       	mov	r31, r11
 856:	f4 60       	ori	r31, 0x04	; 4
 858:	bf 2e       	mov	r11, r31
 85a:	09 c0       	rjmp	.+18     	; 0x86e <vfprintf+0x272>
 85c:	34 fe       	sbrs	r3, 4
 85e:	0a c0       	rjmp	.+20     	; 0x874 <vfprintf+0x278>
 860:	29 2f       	mov	r18, r25
 862:	26 60       	ori	r18, 0x06	; 6
 864:	b2 2e       	mov	r11, r18
 866:	06 c0       	rjmp	.+12     	; 0x874 <vfprintf+0x278>
 868:	28 e0       	ldi	r18, 0x08	; 8
 86a:	30 e0       	ldi	r19, 0x00	; 0
 86c:	05 c0       	rjmp	.+10     	; 0x878 <vfprintf+0x27c>
 86e:	20 e1       	ldi	r18, 0x10	; 16
 870:	30 e0       	ldi	r19, 0x00	; 0
 872:	02 c0       	rjmp	.+4      	; 0x878 <vfprintf+0x27c>
 874:	20 e1       	ldi	r18, 0x10	; 16
 876:	32 e0       	ldi	r19, 0x02	; 2
 878:	f8 01       	movw	r30, r16
 87a:	b7 fe       	sbrs	r11, 7
 87c:	07 c0       	rjmp	.+14     	; 0x88c <vfprintf+0x290>
 87e:	60 81       	ld	r22, Z
 880:	71 81       	ldd	r23, Z+1	; 0x01
 882:	82 81       	ldd	r24, Z+2	; 0x02
 884:	93 81       	ldd	r25, Z+3	; 0x03
 886:	0c 5f       	subi	r16, 0xFC	; 252
 888:	1f 4f       	sbci	r17, 0xFF	; 255
 88a:	06 c0       	rjmp	.+12     	; 0x898 <vfprintf+0x29c>
 88c:	60 81       	ld	r22, Z
 88e:	71 81       	ldd	r23, Z+1	; 0x01
 890:	80 e0       	ldi	r24, 0x00	; 0
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 5f       	subi	r16, 0xFE	; 254
 896:	1f 4f       	sbci	r17, 0xFF	; 255
 898:	a3 01       	movw	r20, r6
 89a:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__ultoa_invert>
 89e:	88 2e       	mov	r8, r24
 8a0:	86 18       	sub	r8, r6
 8a2:	fb 2d       	mov	r31, r11
 8a4:	ff 77       	andi	r31, 0x7F	; 127
 8a6:	3f 2e       	mov	r3, r31
 8a8:	36 fe       	sbrs	r3, 6
 8aa:	0d c0       	rjmp	.+26     	; 0x8c6 <vfprintf+0x2ca>
 8ac:	23 2d       	mov	r18, r3
 8ae:	2e 7f       	andi	r18, 0xFE	; 254
 8b0:	a2 2e       	mov	r10, r18
 8b2:	89 14       	cp	r8, r9
 8b4:	58 f4       	brcc	.+22     	; 0x8cc <vfprintf+0x2d0>
 8b6:	34 fe       	sbrs	r3, 4
 8b8:	0b c0       	rjmp	.+22     	; 0x8d0 <vfprintf+0x2d4>
 8ba:	32 fc       	sbrc	r3, 2
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <vfprintf+0x2d4>
 8be:	83 2d       	mov	r24, r3
 8c0:	8e 7e       	andi	r24, 0xEE	; 238
 8c2:	a8 2e       	mov	r10, r24
 8c4:	05 c0       	rjmp	.+10     	; 0x8d0 <vfprintf+0x2d4>
 8c6:	b8 2c       	mov	r11, r8
 8c8:	a3 2c       	mov	r10, r3
 8ca:	03 c0       	rjmp	.+6      	; 0x8d2 <vfprintf+0x2d6>
 8cc:	b8 2c       	mov	r11, r8
 8ce:	01 c0       	rjmp	.+2      	; 0x8d2 <vfprintf+0x2d6>
 8d0:	b9 2c       	mov	r11, r9
 8d2:	a4 fe       	sbrs	r10, 4
 8d4:	0f c0       	rjmp	.+30     	; 0x8f4 <vfprintf+0x2f8>
 8d6:	fe 01       	movw	r30, r28
 8d8:	e8 0d       	add	r30, r8
 8da:	f1 1d       	adc	r31, r1
 8dc:	80 81       	ld	r24, Z
 8de:	80 33       	cpi	r24, 0x30	; 48
 8e0:	21 f4       	brne	.+8      	; 0x8ea <vfprintf+0x2ee>
 8e2:	9a 2d       	mov	r25, r10
 8e4:	99 7e       	andi	r25, 0xE9	; 233
 8e6:	a9 2e       	mov	r10, r25
 8e8:	09 c0       	rjmp	.+18     	; 0x8fc <vfprintf+0x300>
 8ea:	a2 fe       	sbrs	r10, 2
 8ec:	06 c0       	rjmp	.+12     	; 0x8fa <vfprintf+0x2fe>
 8ee:	b3 94       	inc	r11
 8f0:	b3 94       	inc	r11
 8f2:	04 c0       	rjmp	.+8      	; 0x8fc <vfprintf+0x300>
 8f4:	8a 2d       	mov	r24, r10
 8f6:	86 78       	andi	r24, 0x86	; 134
 8f8:	09 f0       	breq	.+2      	; 0x8fc <vfprintf+0x300>
 8fa:	b3 94       	inc	r11
 8fc:	a3 fc       	sbrc	r10, 3
 8fe:	11 c0       	rjmp	.+34     	; 0x922 <vfprintf+0x326>
 900:	a0 fe       	sbrs	r10, 0
 902:	06 c0       	rjmp	.+12     	; 0x910 <vfprintf+0x314>
 904:	b2 14       	cp	r11, r2
 906:	88 f4       	brcc	.+34     	; 0x92a <vfprintf+0x32e>
 908:	28 0c       	add	r2, r8
 90a:	92 2c       	mov	r9, r2
 90c:	9b 18       	sub	r9, r11
 90e:	0e c0       	rjmp	.+28     	; 0x92c <vfprintf+0x330>
 910:	b2 14       	cp	r11, r2
 912:	60 f4       	brcc	.+24     	; 0x92c <vfprintf+0x330>
 914:	b6 01       	movw	r22, r12
 916:	80 e2       	ldi	r24, 0x20	; 32
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 91e:	b3 94       	inc	r11
 920:	f7 cf       	rjmp	.-18     	; 0x910 <vfprintf+0x314>
 922:	b2 14       	cp	r11, r2
 924:	18 f4       	brcc	.+6      	; 0x92c <vfprintf+0x330>
 926:	2b 18       	sub	r2, r11
 928:	02 c0       	rjmp	.+4      	; 0x92e <vfprintf+0x332>
 92a:	98 2c       	mov	r9, r8
 92c:	21 2c       	mov	r2, r1
 92e:	a4 fe       	sbrs	r10, 4
 930:	10 c0       	rjmp	.+32     	; 0x952 <vfprintf+0x356>
 932:	b6 01       	movw	r22, r12
 934:	80 e3       	ldi	r24, 0x30	; 48
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 93c:	a2 fe       	sbrs	r10, 2
 93e:	17 c0       	rjmp	.+46     	; 0x96e <vfprintf+0x372>
 940:	a1 fc       	sbrc	r10, 1
 942:	03 c0       	rjmp	.+6      	; 0x94a <vfprintf+0x34e>
 944:	88 e7       	ldi	r24, 0x78	; 120
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	02 c0       	rjmp	.+4      	; 0x94e <vfprintf+0x352>
 94a:	88 e5       	ldi	r24, 0x58	; 88
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	b6 01       	movw	r22, r12
 950:	0c c0       	rjmp	.+24     	; 0x96a <vfprintf+0x36e>
 952:	8a 2d       	mov	r24, r10
 954:	86 78       	andi	r24, 0x86	; 134
 956:	59 f0       	breq	.+22     	; 0x96e <vfprintf+0x372>
 958:	a1 fe       	sbrs	r10, 1
 95a:	02 c0       	rjmp	.+4      	; 0x960 <vfprintf+0x364>
 95c:	8b e2       	ldi	r24, 0x2B	; 43
 95e:	01 c0       	rjmp	.+2      	; 0x962 <vfprintf+0x366>
 960:	80 e2       	ldi	r24, 0x20	; 32
 962:	a7 fc       	sbrc	r10, 7
 964:	8d e2       	ldi	r24, 0x2D	; 45
 966:	b6 01       	movw	r22, r12
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 96e:	89 14       	cp	r8, r9
 970:	38 f4       	brcc	.+14     	; 0x980 <vfprintf+0x384>
 972:	b6 01       	movw	r22, r12
 974:	80 e3       	ldi	r24, 0x30	; 48
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 97c:	9a 94       	dec	r9
 97e:	f7 cf       	rjmp	.-18     	; 0x96e <vfprintf+0x372>
 980:	8a 94       	dec	r8
 982:	f3 01       	movw	r30, r6
 984:	e8 0d       	add	r30, r8
 986:	f1 1d       	adc	r31, r1
 988:	80 81       	ld	r24, Z
 98a:	b6 01       	movw	r22, r12
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 992:	81 10       	cpse	r8, r1
 994:	f5 cf       	rjmp	.-22     	; 0x980 <vfprintf+0x384>
 996:	22 20       	and	r2, r2
 998:	09 f4       	brne	.+2      	; 0x99c <vfprintf+0x3a0>
 99a:	42 ce       	rjmp	.-892    	; 0x620 <vfprintf+0x24>
 99c:	b6 01       	movw	r22, r12
 99e:	80 e2       	ldi	r24, 0x20	; 32
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 18 05 	call	0xa30	; 0xa30 <fputc>
 9a6:	2a 94       	dec	r2
 9a8:	f6 cf       	rjmp	.-20     	; 0x996 <vfprintf+0x39a>
 9aa:	f6 01       	movw	r30, r12
 9ac:	86 81       	ldd	r24, Z+6	; 0x06
 9ae:	97 81       	ldd	r25, Z+7	; 0x07
 9b0:	02 c0       	rjmp	.+4      	; 0x9b6 <vfprintf+0x3ba>
 9b2:	8f ef       	ldi	r24, 0xFF	; 255
 9b4:	9f ef       	ldi	r25, 0xFF	; 255
 9b6:	2b 96       	adiw	r28, 0x0b	; 11
 9b8:	e2 e1       	ldi	r30, 0x12	; 18
 9ba:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__epilogue_restores__>

000009be <calloc>:
 9be:	0f 93       	push	r16
 9c0:	1f 93       	push	r17
 9c2:	cf 93       	push	r28
 9c4:	df 93       	push	r29
 9c6:	86 9f       	mul	r24, r22
 9c8:	80 01       	movw	r16, r0
 9ca:	87 9f       	mul	r24, r23
 9cc:	10 0d       	add	r17, r0
 9ce:	96 9f       	mul	r25, r22
 9d0:	10 0d       	add	r17, r0
 9d2:	11 24       	eor	r1, r1
 9d4:	c8 01       	movw	r24, r16
 9d6:	0e 94 4c 01 	call	0x298	; 0x298 <malloc>
 9da:	ec 01       	movw	r28, r24
 9dc:	00 97       	sbiw	r24, 0x00	; 0
 9de:	29 f0       	breq	.+10     	; 0x9ea <calloc+0x2c>
 9e0:	a8 01       	movw	r20, r16
 9e2:	60 e0       	ldi	r22, 0x00	; 0
 9e4:	70 e0       	ldi	r23, 0x00	; 0
 9e6:	0e 94 06 05 	call	0xa0c	; 0xa0c <memset>
 9ea:	ce 01       	movw	r24, r28
 9ec:	df 91       	pop	r29
 9ee:	cf 91       	pop	r28
 9f0:	1f 91       	pop	r17
 9f2:	0f 91       	pop	r16
 9f4:	08 95       	ret

000009f6 <strnlen_P>:
 9f6:	fc 01       	movw	r30, r24
 9f8:	05 90       	lpm	r0, Z+
 9fa:	61 50       	subi	r22, 0x01	; 1
 9fc:	70 40       	sbci	r23, 0x00	; 0
 9fe:	01 10       	cpse	r0, r1
 a00:	d8 f7       	brcc	.-10     	; 0x9f8 <strnlen_P+0x2>
 a02:	80 95       	com	r24
 a04:	90 95       	com	r25
 a06:	8e 0f       	add	r24, r30
 a08:	9f 1f       	adc	r25, r31
 a0a:	08 95       	ret

00000a0c <memset>:
 a0c:	dc 01       	movw	r26, r24
 a0e:	01 c0       	rjmp	.+2      	; 0xa12 <memset+0x6>
 a10:	6d 93       	st	X+, r22
 a12:	41 50       	subi	r20, 0x01	; 1
 a14:	50 40       	sbci	r21, 0x00	; 0
 a16:	e0 f7       	brcc	.-8      	; 0xa10 <memset+0x4>
 a18:	08 95       	ret

00000a1a <strnlen>:
 a1a:	fc 01       	movw	r30, r24
 a1c:	61 50       	subi	r22, 0x01	; 1
 a1e:	70 40       	sbci	r23, 0x00	; 0
 a20:	01 90       	ld	r0, Z+
 a22:	01 10       	cpse	r0, r1
 a24:	d8 f7       	brcc	.-10     	; 0xa1c <strnlen+0x2>
 a26:	80 95       	com	r24
 a28:	90 95       	com	r25
 a2a:	8e 0f       	add	r24, r30
 a2c:	9f 1f       	adc	r25, r31
 a2e:	08 95       	ret

00000a30 <fputc>:
 a30:	0f 93       	push	r16
 a32:	1f 93       	push	r17
 a34:	cf 93       	push	r28
 a36:	df 93       	push	r29
 a38:	fb 01       	movw	r30, r22
 a3a:	23 81       	ldd	r18, Z+3	; 0x03
 a3c:	21 fd       	sbrc	r18, 1
 a3e:	03 c0       	rjmp	.+6      	; 0xa46 <fputc+0x16>
 a40:	8f ef       	ldi	r24, 0xFF	; 255
 a42:	9f ef       	ldi	r25, 0xFF	; 255
 a44:	2c c0       	rjmp	.+88     	; 0xa9e <fputc+0x6e>
 a46:	22 ff       	sbrs	r18, 2
 a48:	16 c0       	rjmp	.+44     	; 0xa76 <fputc+0x46>
 a4a:	46 81       	ldd	r20, Z+6	; 0x06
 a4c:	57 81       	ldd	r21, Z+7	; 0x07
 a4e:	24 81       	ldd	r18, Z+4	; 0x04
 a50:	35 81       	ldd	r19, Z+5	; 0x05
 a52:	42 17       	cp	r20, r18
 a54:	53 07       	cpc	r21, r19
 a56:	44 f4       	brge	.+16     	; 0xa68 <fputc+0x38>
 a58:	a0 81       	ld	r26, Z
 a5a:	b1 81       	ldd	r27, Z+1	; 0x01
 a5c:	9d 01       	movw	r18, r26
 a5e:	2f 5f       	subi	r18, 0xFF	; 255
 a60:	3f 4f       	sbci	r19, 0xFF	; 255
 a62:	31 83       	std	Z+1, r19	; 0x01
 a64:	20 83       	st	Z, r18
 a66:	8c 93       	st	X, r24
 a68:	26 81       	ldd	r18, Z+6	; 0x06
 a6a:	37 81       	ldd	r19, Z+7	; 0x07
 a6c:	2f 5f       	subi	r18, 0xFF	; 255
 a6e:	3f 4f       	sbci	r19, 0xFF	; 255
 a70:	37 83       	std	Z+7, r19	; 0x07
 a72:	26 83       	std	Z+6, r18	; 0x06
 a74:	14 c0       	rjmp	.+40     	; 0xa9e <fputc+0x6e>
 a76:	8b 01       	movw	r16, r22
 a78:	ec 01       	movw	r28, r24
 a7a:	fb 01       	movw	r30, r22
 a7c:	00 84       	ldd	r0, Z+8	; 0x08
 a7e:	f1 85       	ldd	r31, Z+9	; 0x09
 a80:	e0 2d       	mov	r30, r0
 a82:	09 95       	icall
 a84:	89 2b       	or	r24, r25
 a86:	e1 f6       	brne	.-72     	; 0xa40 <fputc+0x10>
 a88:	d8 01       	movw	r26, r16
 a8a:	16 96       	adiw	r26, 0x06	; 6
 a8c:	8d 91       	ld	r24, X+
 a8e:	9c 91       	ld	r25, X
 a90:	17 97       	sbiw	r26, 0x07	; 7
 a92:	01 96       	adiw	r24, 0x01	; 1
 a94:	17 96       	adiw	r26, 0x07	; 7
 a96:	9c 93       	st	X, r25
 a98:	8e 93       	st	-X, r24
 a9a:	16 97       	sbiw	r26, 0x06	; 6
 a9c:	ce 01       	movw	r24, r28
 a9e:	df 91       	pop	r29
 aa0:	cf 91       	pop	r28
 aa2:	1f 91       	pop	r17
 aa4:	0f 91       	pop	r16
 aa6:	08 95       	ret

00000aa8 <__ultoa_invert>:
 aa8:	fa 01       	movw	r30, r20
 aaa:	aa 27       	eor	r26, r26
 aac:	28 30       	cpi	r18, 0x08	; 8
 aae:	51 f1       	breq	.+84     	; 0xb04 <__ultoa_invert+0x5c>
 ab0:	20 31       	cpi	r18, 0x10	; 16
 ab2:	81 f1       	breq	.+96     	; 0xb14 <__ultoa_invert+0x6c>
 ab4:	e8 94       	clt
 ab6:	6f 93       	push	r22
 ab8:	6e 7f       	andi	r22, 0xFE	; 254
 aba:	6e 5f       	subi	r22, 0xFE	; 254
 abc:	7f 4f       	sbci	r23, 0xFF	; 255
 abe:	8f 4f       	sbci	r24, 0xFF	; 255
 ac0:	9f 4f       	sbci	r25, 0xFF	; 255
 ac2:	af 4f       	sbci	r26, 0xFF	; 255
 ac4:	b1 e0       	ldi	r27, 0x01	; 1
 ac6:	3e d0       	rcall	.+124    	; 0xb44 <__ultoa_invert+0x9c>
 ac8:	b4 e0       	ldi	r27, 0x04	; 4
 aca:	3c d0       	rcall	.+120    	; 0xb44 <__ultoa_invert+0x9c>
 acc:	67 0f       	add	r22, r23
 ace:	78 1f       	adc	r23, r24
 ad0:	89 1f       	adc	r24, r25
 ad2:	9a 1f       	adc	r25, r26
 ad4:	a1 1d       	adc	r26, r1
 ad6:	68 0f       	add	r22, r24
 ad8:	79 1f       	adc	r23, r25
 ada:	8a 1f       	adc	r24, r26
 adc:	91 1d       	adc	r25, r1
 ade:	a1 1d       	adc	r26, r1
 ae0:	6a 0f       	add	r22, r26
 ae2:	71 1d       	adc	r23, r1
 ae4:	81 1d       	adc	r24, r1
 ae6:	91 1d       	adc	r25, r1
 ae8:	a1 1d       	adc	r26, r1
 aea:	20 d0       	rcall	.+64     	; 0xb2c <__ultoa_invert+0x84>
 aec:	09 f4       	brne	.+2      	; 0xaf0 <__ultoa_invert+0x48>
 aee:	68 94       	set
 af0:	3f 91       	pop	r19
 af2:	2a e0       	ldi	r18, 0x0A	; 10
 af4:	26 9f       	mul	r18, r22
 af6:	11 24       	eor	r1, r1
 af8:	30 19       	sub	r19, r0
 afa:	30 5d       	subi	r19, 0xD0	; 208
 afc:	31 93       	st	Z+, r19
 afe:	de f6       	brtc	.-74     	; 0xab6 <__ultoa_invert+0xe>
 b00:	cf 01       	movw	r24, r30
 b02:	08 95       	ret
 b04:	46 2f       	mov	r20, r22
 b06:	47 70       	andi	r20, 0x07	; 7
 b08:	40 5d       	subi	r20, 0xD0	; 208
 b0a:	41 93       	st	Z+, r20
 b0c:	b3 e0       	ldi	r27, 0x03	; 3
 b0e:	0f d0       	rcall	.+30     	; 0xb2e <__ultoa_invert+0x86>
 b10:	c9 f7       	brne	.-14     	; 0xb04 <__ultoa_invert+0x5c>
 b12:	f6 cf       	rjmp	.-20     	; 0xb00 <__ultoa_invert+0x58>
 b14:	46 2f       	mov	r20, r22
 b16:	4f 70       	andi	r20, 0x0F	; 15
 b18:	40 5d       	subi	r20, 0xD0	; 208
 b1a:	4a 33       	cpi	r20, 0x3A	; 58
 b1c:	18 f0       	brcs	.+6      	; 0xb24 <__ultoa_invert+0x7c>
 b1e:	49 5d       	subi	r20, 0xD9	; 217
 b20:	31 fd       	sbrc	r19, 1
 b22:	40 52       	subi	r20, 0x20	; 32
 b24:	41 93       	st	Z+, r20
 b26:	02 d0       	rcall	.+4      	; 0xb2c <__ultoa_invert+0x84>
 b28:	a9 f7       	brne	.-22     	; 0xb14 <__ultoa_invert+0x6c>
 b2a:	ea cf       	rjmp	.-44     	; 0xb00 <__ultoa_invert+0x58>
 b2c:	b4 e0       	ldi	r27, 0x04	; 4
 b2e:	a6 95       	lsr	r26
 b30:	97 95       	ror	r25
 b32:	87 95       	ror	r24
 b34:	77 95       	ror	r23
 b36:	67 95       	ror	r22
 b38:	ba 95       	dec	r27
 b3a:	c9 f7       	brne	.-14     	; 0xb2e <__ultoa_invert+0x86>
 b3c:	00 97       	sbiw	r24, 0x00	; 0
 b3e:	61 05       	cpc	r22, r1
 b40:	71 05       	cpc	r23, r1
 b42:	08 95       	ret
 b44:	9b 01       	movw	r18, r22
 b46:	ac 01       	movw	r20, r24
 b48:	0a 2e       	mov	r0, r26
 b4a:	06 94       	lsr	r0
 b4c:	57 95       	ror	r21
 b4e:	47 95       	ror	r20
 b50:	37 95       	ror	r19
 b52:	27 95       	ror	r18
 b54:	ba 95       	dec	r27
 b56:	c9 f7       	brne	.-14     	; 0xb4a <__ultoa_invert+0xa2>
 b58:	62 0f       	add	r22, r18
 b5a:	73 1f       	adc	r23, r19
 b5c:	84 1f       	adc	r24, r20
 b5e:	95 1f       	adc	r25, r21
 b60:	a0 1d       	adc	r26, r0
 b62:	08 95       	ret

00000b64 <__prologue_saves__>:
 b64:	2f 92       	push	r2
 b66:	3f 92       	push	r3
 b68:	4f 92       	push	r4
 b6a:	5f 92       	push	r5
 b6c:	6f 92       	push	r6
 b6e:	7f 92       	push	r7
 b70:	8f 92       	push	r8
 b72:	9f 92       	push	r9
 b74:	af 92       	push	r10
 b76:	bf 92       	push	r11
 b78:	cf 92       	push	r12
 b7a:	df 92       	push	r13
 b7c:	ef 92       	push	r14
 b7e:	ff 92       	push	r15
 b80:	0f 93       	push	r16
 b82:	1f 93       	push	r17
 b84:	cf 93       	push	r28
 b86:	df 93       	push	r29
 b88:	cd b7       	in	r28, 0x3d	; 61
 b8a:	de b7       	in	r29, 0x3e	; 62
 b8c:	ca 1b       	sub	r28, r26
 b8e:	db 0b       	sbc	r29, r27
 b90:	0f b6       	in	r0, 0x3f	; 63
 b92:	f8 94       	cli
 b94:	de bf       	out	0x3e, r29	; 62
 b96:	0f be       	out	0x3f, r0	; 63
 b98:	cd bf       	out	0x3d, r28	; 61
 b9a:	09 94       	ijmp

00000b9c <__epilogue_restores__>:
 b9c:	2a 88       	ldd	r2, Y+18	; 0x12
 b9e:	39 88       	ldd	r3, Y+17	; 0x11
 ba0:	48 88       	ldd	r4, Y+16	; 0x10
 ba2:	5f 84       	ldd	r5, Y+15	; 0x0f
 ba4:	6e 84       	ldd	r6, Y+14	; 0x0e
 ba6:	7d 84       	ldd	r7, Y+13	; 0x0d
 ba8:	8c 84       	ldd	r8, Y+12	; 0x0c
 baa:	9b 84       	ldd	r9, Y+11	; 0x0b
 bac:	aa 84       	ldd	r10, Y+10	; 0x0a
 bae:	b9 84       	ldd	r11, Y+9	; 0x09
 bb0:	c8 84       	ldd	r12, Y+8	; 0x08
 bb2:	df 80       	ldd	r13, Y+7	; 0x07
 bb4:	ee 80       	ldd	r14, Y+6	; 0x06
 bb6:	fd 80       	ldd	r15, Y+5	; 0x05
 bb8:	0c 81       	ldd	r16, Y+4	; 0x04
 bba:	1b 81       	ldd	r17, Y+3	; 0x03
 bbc:	aa 81       	ldd	r26, Y+2	; 0x02
 bbe:	b9 81       	ldd	r27, Y+1	; 0x01
 bc0:	ce 0f       	add	r28, r30
 bc2:	d1 1d       	adc	r29, r1
 bc4:	0f b6       	in	r0, 0x3f	; 63
 bc6:	f8 94       	cli
 bc8:	de bf       	out	0x3e, r29	; 62
 bca:	0f be       	out	0x3f, r0	; 63
 bcc:	cd bf       	out	0x3d, r28	; 61
 bce:	ed 01       	movw	r28, r26
 bd0:	08 95       	ret

00000bd2 <_exit>:
 bd2:	f8 94       	cli

00000bd4 <__stop_program>:
 bd4:	ff cf       	rjmp	.-2      	; 0xbd4 <__stop_program>
